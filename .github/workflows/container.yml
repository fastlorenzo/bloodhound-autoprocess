name: Build docker image and upload it to GH CR

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request_target:
    branches:
      - '*'
  release:
    types: [published, created, edited]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prepare
        run: |
          DOCKER_REPO=${{ github.repository_owner }}
          DOCKER_IMAGE="ghcr.io/${DOCKER_REPO}/bloodhound-autoprocess"
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=docker_repo::${DOCKER_REPO}
          echo ::set-output name=build_args::BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            VCS_REF=${GITHUB_SHA::8}
        env:
          DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ steps.prepare.outputs.docker_image }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GH CR
        uses: docker/login-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-base-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-base-
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          # context: ./
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: ${{ steps.prepare.outputs.build_args }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          # tags: |
          #   ${{ steps.semver_parser.outputs.major }}
          #   ${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}
          #   ${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }}